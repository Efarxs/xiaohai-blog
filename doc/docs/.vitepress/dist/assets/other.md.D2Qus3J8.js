import{_ as a,c as o,o as t,U as e}from"./chunks/framework.rJSJqgwN.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"other.md","filePath":"other.md","lastUpdated":1705157894000}'),r={name:"other.md"},s=e('<h2 id="环境要求" tabindex="-1">环境要求 <a class="header-anchor" href="#环境要求" aria-label="Permalink to &quot;环境要求&quot;">​</a></h2><p>这里将讲述运行 DotCode 所要求的一些软硬件的配置，我们建议你在运行或者部署之前先浏览一遍此页面。</p><h2 id="硬件配置" tabindex="-1">硬件配置 <a class="header-anchor" href="#硬件配置" aria-label="Permalink to &quot;硬件配置&quot;">​</a></h2><p><strong>CPU</strong></p><p>无特别要求。</p><p><strong>内存</strong></p><p>为了获得更好的体验，我们建议至少配置 2G 的 RAM。</p><p><strong>磁盘</strong></p><p>无特别要求，理论上如果不大量在服务器上传附件，DotCode 对磁盘的容量要求并不是很高。但我们推荐最好使用 SSD 硬盘的服务器，能更快的运行 DotCode。</p><p><strong>网络</strong></p><p>DotCode 目前必须在网畅通的情况下使用，否则会导致页面异常。</p><h2 id="软件环境" tabindex="-1">软件环境 <a class="header-anchor" href="#软件环境" aria-label="Permalink to &quot;软件环境&quot;">​</a></h2><p><strong>Docker</strong></p><p>暂时未启用</p><p><strong>JRE</strong></p><p>目前 Halo 的默认及推荐安装方式为 Docker 容器运行，使用 jar 包运行的方式需要用户自行构建 jar 包。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>当前版本需要 JRE 17 的版本，推荐使用 OpenJDK 17。</p></div><p><strong>Mysql</strong></p><p>使用 Mysql。</p><p><strong>Web 服务器（可选）</strong></p><p>如果你部署在生产环境，那么你很可能需要进行域名绑定，这时候我们推荐使用诸如 Nginx、Caddy 之类的 Web 服务器进行反向代理。但需要注意的是，目前 Halo 不支持代理到子目录（如：halo.run/blog）。</p><p><strong>Wget（可选）</strong> 后续的文档中，我们会使用 wget 为例，用于下载所需要的文件，所以请确保服务器已经安装好了这个软件包。当然，下载文件不限制工具，如果你对其他工具熟悉，可以忽略。</p><p><strong>VIM（可选）</strong></p><p>后续的文档中，我们会使用 vim 为例，用于修改一些必要的配置文件，所以同样请确保服务器已经安装了这个软件包。当前，修改文档也不限制工具，如果你对其他编辑软件熟悉，也可以忽略。</p><h2 id="浏览器支持" tabindex="-1">浏览器支持 <a class="header-anchor" href="#浏览器支持" aria-label="Permalink to &quot;浏览器支持&quot;">​</a></h2><ol><li>用户前台：支持目前常见的现代浏览器，具体视 Vuejs 框架的支持情况而定。</li><li>管理后台：支持目前常见的现代浏览器，具体视 Vuejs 框架的支持情况而定。</li></ol><h2 id="工作目录" tabindex="-1">工作目录 <a class="header-anchor" href="#工作目录" aria-label="Permalink to &quot;工作目录&quot;">​</a></h2><p>指 Halo 所依赖的工作目录，在 Halo 运行的时候会在系统当前用户目录下产生一个 .halo2 的文件夹，绝对路径为 ~ /.halo2。由于这个工作目录是固定的，所以上面所说的 运行包不限制所存放的位置，里面通常包含下列目录或文件：</p><p>db：存放 H2 Database 的物理文件，如果你使用其他数据库，那么不会存在这个目录。 themes：里面包含用户所安装的主题。 plugins：里面包含用户所安装的插件。 attachments：附件目录。 logs：运行日志目录。 application.yaml：配置文件。 主题 包含了各种站点页面模板的资源包。用户访问 Halo 站点浏览到的内容及样式，由 Halo 管理端所配置使用的主题所决定。</p><p>插件 用于扩展 Halo 功能的软件包。插件独立于 Halo 核心应用，可以单独安装、升级、卸载。</p>',30),p=[s];function n(l,i,h,c,d,g){return t(),o("div",null,p)}const m=a(r,[["render",n]]);export{u as __pageData,m as default};
